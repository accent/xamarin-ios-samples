// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using CoreSpotlight;
using System.Collections.Generic;

namespace Todo11App
{
	public partial class DetailViewController : UIViewController
	{
		TodoItem current {get;set;}
		ContactHelper contacts;
		
        public TableViewController Delegate { get; set; }

		public DetailViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
            NavigationItem.LargeTitleDisplayMode = UINavigationItemLargeTitleDisplayMode.Never;

			SaveButton.TouchUpInside += (sender, e) => {
				
				current.Name = NameText.Text;
				current.Notes = NotesText.Text;
				current.Done = DoneSwitch.On;

				// includes CoreSpotlight indexing!
				Delegate.SaveTodo(current); 

				UIAccessibility.PostNotification (UIAccessibilityPostNotification.Announcement, new NSString(@"Item was saved"));

				NavigationController.PopViewController(true);
			};
			CancelButton.TouchUpInside += (sender, e) => {
				if (Delegate != null) 
				{
					Delegate.DeleteTodo(current); // also CoreSpotlight

					UIAccessibility.PostNotification (UIAccessibilityPostNotification.Announcement,new NSString(@"Item was deleted"));
				}
				else {// HACK: TODO: 
					Console.WriteLine("Delegate not set - HACK");
				}

				NavigationController.PopViewController(true);
			};

			NameText.TextAlignment = UITextAlignment.Natural;
			NotesText.TextAlignment = UITextAlignment.Natural;

			UserActivity = UserActivityHelper.CreateNSUserActivity (current?? new TodoItem());
		}
		public override void ViewWillDisappear (bool animated)
		{
			UserActivity?.ResignCurrent ();

			base.ViewWillDisappear (animated);
		}
		// when displaying, set-up the properties
		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			NameText.Text = current.Name;
			NotesText.Text = current.Notes;
			DoneSwitch.On = current.Done;
			
			// button is cancel or delete
			if (current.Id > 0) {
				CancelButton.SetTitle (NSBundle.MainBundle.LocalizedString ("Delete", "")
					, UIControlState.Normal);
				CancelButton.SetTitleColor (UIColor.Red, UIControlState.Normal);
			} else {
				CancelButton.SetTitle(NSBundle.MainBundle.LocalizedString ("Cancel", "")
					,UIControlState.Normal);
				CancelButton.SetTitleColor (UIColor.DarkTextColor, UIControlState.Normal);
			}
		}


		// this will be called before the view is displayed 
		public void SetTodo (TodoItem todo) {
			current = todo;
		}
	}
}
